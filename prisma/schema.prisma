// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  exercise      Exercise[]
  food          Food[]
  mood          Mood[]
  numberOfMeals NumberOfMeals[]
  userWeight    UserWeight[]
  visions       Visions[]
  water         Water[]

  @@map("users")
}

enum diaryType {
  plans
  diary
}

model Diary {
  id        Int       @id @default(autoincrement())
  userId    Int
  type      diaryType
  text      String
  createdAt String

  @@unique([userId, createdAt, type])
  @@map("diary")
}

model ExerciseType {
  id       Int        @id @default(autoincrement())
  type     String     @unique
  exercise Exercise[]

  @@map("exerciseType")
}

model Exercise {
  id           Int          @id @default(autoincrement())
  userId       Int
  typeId       Int
  description  String
  time         String
  createdAt    String
  users        Users        @relation(fields: [userId], references: [id])
  exerciseType ExerciseType @relation(fields: [typeId], references: [id])

  @@map("exercise")
}

model FoodType {
  id   Int    @id @default(autoincrement())
  type String @unique
  food Food[]

  @@map("foodType")
}

model Food {
  id        Int    @id @default(autoincrement())
  typeId    Int
  userId    Int
  content   String
  createdAt String

  types FoodType @relation(fields: [typeId], references: [id])
  users Users    @relation(fields: [userId], references: [id])

  @@map("food")
}

enum moodType {
  awful
  bad
  average
  good
  happy
}

model Mood {
  id        Int      @id @default(autoincrement())
  userId    Int
  mood      moodType
  createdAt String
  users     Users    @relation(fields: [userId], references: [id])

  @@unique([userId, createdAt])
  @@map("mood")
}

model NumberOfMeals {
  id        Int    @id @default(autoincrement())
  number    Int
  userId    Int
  createdAt String
  users     Users  @relation(fields: [userId], references: [id])

  @@unique([userId, createdAt])
  @@map("numberOfMeals")
}

model UserWeight {
  id        Int    @id @default(autoincrement())
  userId    Int
  weight    Int
  createdAt String
  users     Users  @relation(fields: [userId], references: [id])

  @@unique([userId, createdAt])
  @@map("userWeight")
}

model Visions {
  id     Int    @id @default(autoincrement())
  userId Int
  image  String
  users  Users  @relation(fields: [userId], references: [id])

  @@unique([userId, image])
  @@map("visions")
}

model Water {
  id            Int    @id @default(autoincrement())
  userId        Int
  waterQuantity Int
  createdAt     String
  users         Users  @relation(fields: [userId], references: [id])

  @@unique([userId, createdAt])
  @@map("water")
}
